#textdomain wesnoth-World_Conquest
# WORLD_CONQUEST_HACKS
# WORLD_CONQUEST_OBJECTIVES
# WORLD_CONQUEST_PLAYER_SIDE SIDE GOLD
# WORLD_CONQUEST_ENEMY_SIDE SIDE GOLD
# WORLD_CONQUEST_PROMOTE
# WORLD_CONQUEST_SCENARIO_EVENTS
# WORLD_CONQUEST_BEGINNING
#define WORLD_CONQUEST_HACKS
[event]
	name=prestart
	# Hack 2a: restore the custom recall list
	{FOREACH iotd_recall_store i}
		{VARIABLE iotd_recall_store[$i|].status.poisoned no}
		{VARIABLE iotd_recall_store[$i|].goto_x 0}
		{VARIABLE iotd_recall_store[$i|].goto_y 0}
	        [unstore_unit]
        		variable=iotd_recall_store[$i]
			x,y=recall
	        [/unstore_unit]
	{NEXT i}
	{CLEAR_VARIABLE iotd_recall_store}
	# Hack 1b: Get the true leader back from recall list
	{FOREACH_FROM player 1 I}
		[store_starting_location]
			variable=startpos
			side=$I
		[/store_starting_location]
		[recall]
			canrecruit=yes
			x,y=$startpos.x,$startpos.y
			side=$I
		show=no
		[/recall]
	{NEXT I}
	{CLEAR_VARIABLE startpos}
	# Hack 3b: restore original recruit list
	[if]
	        [variable]
	                name=scenario
	                not_equals=1
	        [/variable]
	        [then]
                    {FOREACH side I}
			[set_recruit]
				side=$side[$I|].side
				recruit=$player[$side[$I|].side|].recruit
			[/set_recruit]
	#Hack 4b Gives the early finish bonus
			[gold]
				amount=$side[$I|].gold
				side=$side[$I|].side
			[/gold]
                    {NEXT I}
	        [/then]
	[/if]
[/event]

[event]
	name=victory
	carryover_report=false
	# Hack 2b: Build a custom recall list
        [store_unit]
       	    variable=iotd_recall_store
            kill=no
            [filter]
                side=1,2,3
            [/filter]
        [/store_unit]
	# Hack 4a: Calculate gold bonus
	[store_villages]
		variable=village_count
	[/store_villages]
	{VARIABLE gold_bonus $scenario}
	{VARIABLE_OP gold_bonus multiply 4}
	{VARIABLE_OP gold_bonus add 20}
	{VARIABLE_OP gold_bonus sub $turn_number}
	{VARIABLE_OP gold_bonus multiply ("$($village_count.length+1)")}
        [store_side]
            side=1,2,3
        [/store_side]
        {FOREACH side I}
            {VARIABLE ("player[$($I+1)].recruit") ("$side[$I].recruit")}
            {VARIABLE_OP side[$I|].gold add $gold_bonus}
	    {VARIABLE_OP side[$I|].gold multiply 15}
	    {VARIABLE_OP side[$I|].gold divide 100}
        {NEXT I}
	{CLEAR_VARIABLE $gold_bonus}
	{CLEAR_VARIABLE $village_count}
[/event]
#enddef

#define WORLD_CONQUEST_OBJECTIVES
[event]
	name=prestart
	[objectives]
		side=0
		summary= _ "<span color='red'>Nightmare mod</span>"
		[objective]
			description=_ "Defeat all enemy leaders"
			condition=win
		[/objective]
		[objective]
			description=_ "Time runs out"
			condition=lose
		[/objective]
		[objective]
			description=_ "Lose your leader and all your heroes"
			condition=lose
		[/objective]
	[/objectives]
[/event]
#enddef

#define WORLD_CONQUEST_PLAYER_SIDE SIDE GOLD
[side]
	[ai]
		villages_per_scout=16
	[/ai]
	id="WCp{SIDE}"
	save_id="WCp{SIDE}"
	persistent=yes
	canrecruit=yes
	no_leader="yes"
	type=Galleon
	side={SIDE}
	gold={GOLD}
	controller=human
	team_name=allies
	user_team_name=_ "Allies"
	fog=yes
	village_gold=2
	share_view=yes
[/side]
#enddef

#define WORLD_CONQUEST_ENEMY_SIDE SIDE GOLD
[side]
	[ai]
		villages_per_scout=20
		passive_leader=yes
		caution=0.1
	[/ai]
	type=Peasant
	side={SIDE}
	gold={GOLD}
	canrecruit=yes
	controller=ai
	allow_player=no
	team_name=enemies
	user_team_name= _ "teamname^Enemies"
	fog=yes
	village_gold=2
[/side]
#enddef

#define WORLD_CONQUEST_PROMOTE
[event]
	name=die
	first_time_only=no

	[filter]
		side=1,2,3
		canrecruit="yes"
	[/filter]
	{CLEAR_VARIABLE candidates}
	[store_unit]
		variable=candidates
		[filter]
			side=$unit.side
			role=hero
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=candidates.length
			greater_than=0
		[/variable]
		[then]
			{VARIABLE candidates[0].canrecruit yes}
			{VARIABLE candidates[0].overlays ""}
			[unstore_unit]
				variable=candidates[0]
			[/unstore_unit]
			[gold]
				side=$unit.side
				amount=-50
			[/gold]
		[/then]
		[else]
			[message]
				side=1,2,3
				message=_"No! This is the end!"
			[/message]
			[endlevel]
				result=defeat
			[/endlevel]
		[/else]
	[/if]
	{CLEAR_VARIABLE candidates}
[/event]
#enddef

#define WORLD_CONQUEST_SCENARIO_EVENTS
{WORLD_CONQUEST_HACKS}
{WORLD_CONQUEST_OBJECTIVES}
{WORLD_CONQUEST_PROMOTE}
{WORLD_CONQUEST_CREATE_HERO}
{WORLD_CONQUEST_RECRUIT}
{WORLD_CONQUEST_INVEST_BONUSES}
{WORLD_CONQUEST_GENERATE_BONUS}
{WORLD_CONQUEST_PICKUP_BONUS}
{WORLD_CONQUEST_PICKUP_TREASURE}
{WORLD_CONQUEST_AUTO_RECALLS}
{WORLD_CONQUEST_FEEDING_SPECIAL}
#enddef

#define WORLD_CONQUEST_BEGINNING
{WORLD_CONQUEST_SCENARIO_EVENTS}
{WORLD_CONQUEST_VICTORY}
[event]
	name=start
	{WORLD_CONQUEST_RANDOM_NOISE 35 35 Gs^Fp}				

#	[store_unit]
#		variable=player[0].leader
#		[filter]
#			side=4
#		[/filter]
#	[/store_unit]
	[store_unit]
		variable=player[1].leader
		[filter]
			side=1
		[/filter]
	[/store_unit]
	[store_unit]
		variable=player[2].leader
		[filter]
			side=2
		[/filter]
	[/store_unit]
	[store_unit]
		variable=player[3].leader
		[filter]
			side=3
		[/filter]
	[/store_unit]

	# need to get an accurate count of how many player slots are actually filled
	[store_unit]
		variable=players
		[filter]
		    side=1,2,3
            canrecruit=yes
		[/filter]
	[/store_unit]

	# clean up, don't need saves to get any more bloated than necessary
	{VARIABLE temp $players.length|}
	{CLEAR_VARIABLE players}
	{VARIABLE players $temp}

	{FOREACH_FROM player 1 I}
		# check to see which group this leader belongs to
		{FOREACH_FROM group 1 J} 
			{FOREACH group[$J].leader K} 
				[if] 
					[variable]
						name=group[$J].leader[$K].type
						equals=$player[$I].leader.type
					[/variable]
					[then] 
						{VARIABLE player[$I].group $J}
						{VARIABLE player[$I].group_leader $group[$J].leader[$K].type}
						# set initial recruits and starter unit based on leader type
						[set_recruit]
							side=$I
							recruit=$group[$J].leader[$K].recruit
						[/set_recruit]
					[/then]
				[/if]
			{NEXT K}
		{NEXT J}
		[if]
			# if no matches are found, pick a group at random and just use the default leader to determine starting recruits
			[variable]
				name=player[$I].group
				less_than=1
			[/variable]
			[then]
				{VARIABLE_OP player[$I].group rand 1.."$($group.length-1)"}
				[set_recruit]
					side=$I
					recruit=$group[$player[$I].group].leader[0].recruit
				[/set_recruit]
			[/then]
		[/if]
	
		[if]
			[have_unit]
				side=$I
				canrecruit=yes
			[/have_unit]
			[then]
				# initialize leader variables
				[unstore_unit]
					variable=player[$I].leader
				[/unstore_unit]
				[object]
					silent=yes
					[filter]
						x,y=$player[$I].leader.x,$player[$I].leader.y
					[/filter]
					{WORLD_CONQUEST_EXPERIENCE_PENALTY}
				[/object]

				# initialize player side variables
				{VARIABLE player[$I].heroes none}
				{VARIABLE player[$I].artifacts none}
				{VARIABLE player[$I].training none}
				{VARIABLE player[$I].picks 2}
	
				# create starting helper
				{VARIABLE_OP bonus rand 0..6}
				{VARIABLE hero_type $group[$player[$I].group].recruit[$bonus].type}
				[fire_event]
					name=world conquest hero
					[primary_unit]
						x,y=$player[$I].leader.x,$player[$I].leader.y
					[/primary_unit]
				[/fire_event]
			[/then]
		[/if]
	{NEXT I}

	{WORLD_CONQUEST_GROUP_RELATIONS}
	[store_side]
	    side=1,2,3
	[/store_side]
	{FOREACH_FROM player 1 I}
                {VARIABLE player[$I].recruit ("$side[$($I-1)].recruit")}
	{NEXT I}		
	{WORLD_CONQUEST_INITIAL_INVEST_OPTIONS}

	{FOREACH_FROM player 1 I}
		[if]
			[have_unit]
				side=$I
				canrecruit=yes
			[/have_unit]
			[then]
				# each player gets a random second helper from one of their associated factions
				{VARIABLE_OP rand rand 0..1}
				{VARIABLE_OP bonus rand 0..6}
				{VARIABLE hero_type $group[$player[$I].ally[$rand]].recruit[$bonus].type}
				[fire_event]
					name=world conquest hero
					[primary_unit]
						x,y=$player[$I].leader.x,$player[$I].leader.y
					[/primary_unit]
				[/fire_event]

				# bonus heroes for weaker factions
				[insert_tag]
					name=command
					variable=group[$player[$I].group].bonus_hero
				[/insert_tag]
			[/then]
		[/if]
	{NEXT I}

	{WORLD_CONQUEST_AI_BONUSES 4 150}

	# initialize enemy side 4: 1 extra recruiting group, one L2 unit per player, no L3 units
	{WORLD_CONQUEST_ENEMY 4 1 "$players" 0}

	# generate bonuses, 1 per player
	{VARIABLE I $players}
	[fire_event]
		name=world conquest bonuses
	[/fire_event]

	[if]
		[variable]
			name=players
			greater_than=1
		[/variable]
		[then]
			[message]
				side=2
				canrecruit=yes
				message=_"To war! Prepare to defend yourselves!"
			[/message]
			[message]
				side=1
				canrecruit=yes
				message=_"Why do we fight amongst ourselves? We should band together and take the coast with our combined forces!"
			[/message]
			[message]
				side=3
				canrecruit=yes
				message=_"You speak truly; together we can overpower the rest. After that, who knows? Together we could go on to conquer other lands across the sea!"
			[/message]
		[/then]
		[else]
			[message]
				side=1
				canrecruit=yes
				message=_"To war! Prepare to defend yourselves!"
			[/message]
		[/else]
	[/if]
	[message]
		side=4
		canrecruit=yes
		message=_"Foolish upstarts. You will never defeat us! Come, my allies. Let us crush them!"
	[/message]
	[message]
		side=4
		canrecruit=no
		message=_"Yes! We will drive them into the sea!"
	[/message]
	[message]
		side=1,2,3
		canrecruit=no
		message=_"Never fear! Your trusted friends stand beside you!"
	[/message]
[/event]
#enddef
